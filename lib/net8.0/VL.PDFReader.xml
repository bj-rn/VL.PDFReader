<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VL.PDFReader</name>
    </assembly>
    <members>
        <member name="T:VL.PDFReader.Exceptions.PdfCannotOpenFileException">
            <summary>
            Thrown if the PDF file was not found or could not be opened.
            </summary>
        </member>
        <member name="M:VL.PDFReader.Exceptions.PdfCannotOpenFileException.#ctor">
            <inheritdoc/>
        </member>
        <member name="T:VL.PDFReader.Exceptions.PdfException">
            <summary>
            Base class for all PDF related exceptions.
            </summary>
            <inheritdoc/>
        </member>
        <member name="M:VL.PDFReader.Exceptions.PdfException.#ctor(System.String)">
            <summary>
            Base class for all PDF related exceptions.
            </summary>
            <inheritdoc/>
        </member>
        <member name="T:VL.PDFReader.Exceptions.PdfInvalidFormatException">
            <summary>
            Thrown if the PDF format is invalid or corrupted.
            </summary>
        </member>
        <member name="M:VL.PDFReader.Exceptions.PdfInvalidFormatException.#ctor">
            <inheritdoc/>
        </member>
        <member name="T:VL.PDFReader.Exceptions.PdfPageNotFoundException">
            <summary>
            Thrown if the PDF does not contain the given page number.
            </summary>
        </member>
        <member name="M:VL.PDFReader.Exceptions.PdfPageNotFoundException.#ctor">
            <inheritdoc/>
        </member>
        <member name="T:VL.PDFReader.Exceptions.PdfPasswordProtectedException">
            <summary>
            Thrown if the PDF requires a password and the given password was not given or incorrect.
            </summary>
        </member>
        <member name="M:VL.PDFReader.Exceptions.PdfPasswordProtectedException.#ctor">
            <inheritdoc/>
        </member>
        <member name="T:VL.PDFReader.Exceptions.PdfUnknownException">
            <summary>
            Thrown on unknown PDF errors.
            </summary>
        </member>
        <member name="M:VL.PDFReader.Exceptions.PdfUnknownException.#ctor">
            <inheritdoc/>
        </member>
        <member name="T:VL.PDFReader.Exceptions.PdfUnsupportedSecuritySchemeException">
            <summary>
            Thrown if the PDF file uses an unsupported security scheme.
            </summary>
        </member>
        <member name="M:VL.PDFReader.Exceptions.PdfUnsupportedSecuritySchemeException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:VL.PDFReader.Internals.NativeMethods.FPDF_LoadCustomDocument(System.IO.Stream,System.String,System.Int32)">
            <summary>
            Opens a document using a .NET Stream. Allows opening huge
            PDFs without loading them into memory first.
            </summary>
            <param name="input">The input Stream. Don't dispose prior to closing the pdf.</param>
            <param name="password">Password, if the PDF is protected. Can be null.</param>
            <param name="id">Retrieves an IntPtr to the COM object for the Stream. The caller must release this with Marshal.Release prior to Disposing the Stream.</param>
            <returns>An IntPtr to the FPDF_DOCUMENT object.</returns>
        </member>
        <member name="T:VL.PDFReader.Internals.NativeMethods.FPDFBitmap">
            <summary>
            A number indicating for bitmap format.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDFBitmap.Gray">
            <summary>
            Gray scale bitmap, one byte per pixel.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDFBitmap.BGR">
            <summary>
            3 bytes per pixel, byte order: blue, green, red.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDFBitmap.BGRx">
            <summary>
            4 bytes per pixel, byte order: blue, green, red, unused.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDFBitmap.BGRA">
            <summary>
            4 bytes per pixel, byte order: blue, green, red, alpha.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.ANNOT">
            <summary>
            Set if annotations are to be rendered.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.LCD_TEXT">
            <summary>
            Set if using text rendering optimized for LCD display. This flag will only take effect if anti-aliasing is enabled for text.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.NO_NATIVETEXT">
            <summary>
            Don't use the native text output available on some platforms.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.GRAYSCALE">
            <summary>
            Grayscale output.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.DEBUG_INFO">
            <summary>
            Obsolete, has no effect, retained for compatibility.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.NO_CATCH">
            <summary>
            Obsolete, has no effect, retained for compatibility.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.RENDER_LIMITEDIMAGECACHE">
            <summary>
            Limit image cache size.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.RENDER_FORCEHALFTONE">
            <summary>
            Always use halftone for image stretching.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.PRINTING">
            <summary>
            Render for printing.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.RENDER_NO_SMOOTHTEXT">
            <summary>
            Set to disable anti-aliasing on text. This flag will also disable LCD optimization for text rendering.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.RENDER_NO_SMOOTHIMAGE">
            <summary>
            Set to disable anti-aliasing on images.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.RENDER_NO_SMOOTHPATH">
            <summary>
            Set to disable anti-aliasing on paths.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.REVERSE_BYTE_ORDER">
            <summary>
            Set whether to render in a reverse Byte order, this flag is only used when rendering to a bitmap.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF.CONVERT_FILL_TO_STROKE">
            <summary>
            Set whether fill paths need to be stroked. This flag is only used when FPDF_COLORSCHEME is passed in, since with a single fill color for paths the boundaries of adjacent fill paths are less visible.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF_ERR.SUCCESS">
            <summary>
            No error.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF_ERR.UNKNOWN">
            <summary>
            Unknown error.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF_ERR.FILE">
            <summary>
            File not found or could not be opened.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF_ERR.FORMAT">
            <summary>
            File not in PDF format or corrupted.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF_ERR.PASSWORD">
            <summary>
            Password required or incorrect password.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF_ERR.SECURITY">
            <summary>
            Unsupported security scheme.
            </summary>
        </member>
        <member name="F:VL.PDFReader.Internals.NativeMethods.FPDF_ERR.PAGE">
            <summary>
            Page not found or content error.
            </summary>
        </member>
        <member name="T:VL.PDFReader.IRenderOptions">
            <summary>
            Contains all relevant information to render a PDF page into an image.
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.Dpi">
            <summary>
            The DPI scaling to use for rasterization of the PDF.
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.Width">
            <summary>
            The width of the desired page. Use <see langword="null"/> if the original width should be used.
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.Height">
            <summary>
            The height of the desired page. Use <see langword="null"/> if the original height should be used.
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.WithAnnotations">
            <summary>
            Specifies whether annotations be rendered.
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.WithFormFill">
            <summary>
            Specifies whether form filling will be rendered.
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.WithAspectRatio">
            <summary>
            Specifies that <see cref="P:VL.PDFReader.IRenderOptions.Width"/> or <see cref="P:VL.PDFReader.IRenderOptions.Height"/> should be adjusted for aspect ratio (either one must be <see langword="null"/>).
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.Rotation">
            <summary>
            Specifies the rotation at 90 degree intervals.
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.AntiAliasing">
            <summary>
            Specifies which parts of the PDF should be anti-aliasing for rendering.
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.BackgroundColor">
            <summary>
            Specifies the background color. Defaults to <see cref="F:Stride.Core.Mathematics.Color4.White"/>.
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.Bounds">
            <summary>
            Specifies the bounds for the page relative toPageSizes. This can be used for clipping (bounds inside of page) or additional margins (bounds outside of page). The bound units are relative to the PDF size (at 72 DPI).
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.UseTiling">
            <summary>
            Specifies that the PDF should be rendered as several segments and merged into the final image. This can help in cases where the output image is too large, causing corrupted images (e.g. missing text) or crashes.
            </summary>
        </member>
        <member name="P:VL.PDFReader.IRenderOptions.DpiRelativeToBounds">
            <summary>
            Specifies that <see cref="P:VL.PDFReader.IRenderOptions.Dpi"/> and <see cref="P:VL.PDFReader.IRenderOptions.WithAspectRatio"/> will be calculated relative to <see cref="P:VL.PDFReader.IRenderOptions.Bounds"/> instead of the original PDF.
            </summary>
        </member>
        <member name="T:VL.PDFReader.PdfAntiAliasing">
            <summary>
            Specifies which parts of the PDF should be rendered with anti-aliasing.
            </summary>
        </member>
        <member name="F:VL.PDFReader.PdfAntiAliasing.None">
            <summary>
            No anti-aliasing.
            </summary>
        </member>
        <member name="F:VL.PDFReader.PdfAntiAliasing.Text">
            <summary>
            Use anti-aliasing on text.
            </summary>
        </member>
        <member name="F:VL.PDFReader.PdfAntiAliasing.Images">
            <summary>
            Use anti-aliasing on images.
            </summary>
        </member>
        <member name="F:VL.PDFReader.PdfAntiAliasing.Paths">
            <summary>
            Use anti-aliasing on paths.
            </summary>
        </member>
        <member name="F:VL.PDFReader.PdfAntiAliasing.All">
            <summary>
            Use anti-aliasing on everything.
            </summary>
        </member>
        <member name="T:VL.PDFReader.PdfDocument">
            <summary>
            Provides functionality to render a PDF document.
            </summary>
        </member>
        <member name="P:VL.PDFReader.PdfDocument.PageSizes">
            <summary>
            Size of each page in the PDF document.
            </summary>
        </member>
        <member name="P:VL.PDFReader.PdfDocument.PageCount">
            <summary>
            Number of pages in the PDF document.
            </summary>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.Load(VL.Lib.IO.Path,System.String,System.Nullable{Stride.Core.Mathematics.Int2},System.Boolean)">
            <summary>
            Initializes a new instance of the PdfDocument class with the provided path.
            </summary>
            <param name="path">path the PDF document.</param>
            <param name="password">Password for the PDF document.</param>
            <param name="maxTileSize"></param>
            <param name="disposeStream">Decides if the stream  <paramref name="path"/> will closed on dispose as well.</param>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.Load(System.IO.Stream,System.String,System.Nullable{Stride.Core.Mathematics.Int2},System.Boolean)">
            <summary>
            Initializes a new instance of the PdfDocument class with the provided stream.
            </summary>
            <param name="stream">Stream for the PDF document.</param>
            <param name="password">Password for the PDF document.</param>
            <param name="maxTileSize"></param>
            <param name="disposeStream">Decides if <paramref name="stream"/> will closed on dispose as well.</param>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.GetMetaData">
            <summary>
            Get metadata information from the PDF document.
            </summary>
            <returns>The PDF metadata.</returns>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.Search(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds all occurences of text.
            </summary>
            <param name="text">The text to search for.</param>
            <param name="matchCase">Whether to match case.</param>
            <param name="wholeWord">Whether to match whole words only.</param>
            <returns>All matches.</returns>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.Search(System.String,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Finds all occurences of text.
            </summary>
            <param name="text">The text to search for.</param>
            <param name="matchCase">Whether to match case.</param>
            <param name="wholeWord">Whether to match whole words only.</param>
            <param name="page">The page to search on.</param>
            <returns>All matches.</returns>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.Search(System.String,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Finds all occurences of text.
            </summary>
            <param name="text">The text to search for.</param>
            <param name="matchCase">Whether to match case.</param>
            <param name="wholeWord">Whether to match whole words only.</param>
            <param name="startPage">The page to start searching.</param>
            <param name="endPage">The page to end searching.</param>
            <returns>All matches.</returns>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.GetPdfText(System.Int32)">
            <summary>
            Get all text on the page.
            </summary>
            <param name="page">The page to get the text for.</param>
            <returns>The text on the page.</returns>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.GetPdfText(VL.PDFReader.PdfTextSpan)">
            <summary>
            Get all text matching the text span.
            </summary>
            <param name="textSpan">The span to get the text for.</param>
            <returns>The text matching the span.</returns>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.GetPageRotation(System.Int32)">
            <summary>
            Get the current rotation of the page.
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.LoadImage(System.Int32,VL.PDFReader.RenderOptions)">
            <summary>
            Renders a single page of a given PDF into a SKImage.
            </summary>
            <param name="page">The specific page to be converted.</param>
            <param name="options">Additional options for PDF rendering.</param>
            <returns>The rendered PDF page as a SKImage.</returns>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.LoadTexture(Stride.Graphics.GraphicsDevice,System.Int32,VL.PDFReader.RenderOptions,Stride.Graphics.TextureFlags,Stride.Graphics.GraphicsResourceUsage)">
            <summary>
            Renders a single page of a given PDF into a Stride Texture.
            </summary>
            <param name="device">A Stride.Graphics.Graphics.Device</param>
            <param name="page">The specific page to be converted.</param>
            <param name="options">Additional options for PDF rendering.</param>
            <param name="textureFlags">Stride.Graphics.TextureFlags</param>
            <param name="usage">Stride.Graphics.GraphicsResourceUsage</param>
            <returns>The rendered PDF page as a Stride Texture.</returns>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.Render(System.Int32,System.Nullable{System.Single},System.Nullable{System.Single},System.Single,VL.PDFReader.PdfRotation,VL.PDFReader.Internals.NativeMethods.FPDF,System.Boolean,Stride.Core.Mathematics.Color4,System.Nullable{Stride.Core.Mathematics.RectangleF},System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Renders a page of the PDF document to an image.
            </summary>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:VL.PDFReader.PdfDocument.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">Whether this method is called from <see cref="M:VL.PDFReader.PdfDocument.Dispose"/>.</param>
        </member>
        <member name="T:VL.PDFReader.PdfMetaData">
            <summary>
            Contains text from metadata of the document.
            </summary>
        </member>
        <member name="T:VL.PDFReader.PdfRotation">
            <summary>
            Specifies the rotation of pages shown in the PDF renderer.
            </summary>
        </member>
        <member name="F:VL.PDFReader.PdfRotation.Rotate0">
            <summary>
            No rotation.
            </summary>
        </member>
        <member name="F:VL.PDFReader.PdfRotation.Rotate90">
            <summary>
            Rotated 90 degrees clockwise.
            </summary>
        </member>
        <member name="F:VL.PDFReader.PdfRotation.Rotate180">
            <summary>
            Rotated 180 degrees.
            </summary>
        </member>
        <member name="F:VL.PDFReader.PdfRotation.Rotate270">
            <summary>
            Rotated 90 degrees counter-clockwise.
            </summary>
        </member>
        <member name="T:VL.PDFReader.RenderOptions">
            <summary>
            Contains all relevant information to render a PDF page into an image.
            </summary>
            <param name="Dpi">The DPI scaling to use for rasterization of the PDF.</param>
            <param name="Width">The width of the desired page. Use <see langword="null"/> if the original width should be used.</param>
            <param name="Height">The height of the desired page. Use <see langword="null"/> if the original height should be used.</param>
            <param name="WithAnnotations">Specifies whether annotations be rendered.</param>
            <param name="WithFormFill">Specifies whether form filling will be rendered.</param>
            <param name="WithAspectRatio">Specifies that <paramref name="Width"/> or <paramref name="Height"/> should be adjusted for aspect ratio (either one must be <see langword="null"/>).</param>
            <param name="Rotation">Specifies the rotation at 90 degree intervals.</param>
            <param name="AntiAliasing">Specifies which parts of the PDF should be anti-aliasing for rendering.</param>
            <param name="BackgroundColor">Specifies the background color. Defaults to <see cref="F:Stride.Core.Mathematics.Color4.White"/>.</param>
            <param name="Bounds">Specifies the bounds for the page relative to PageSizes. This can be used for clipping (bounds inside of page) or additional margins (bounds outside of page) The bound units are relative to the PDF size (at 72 DPI).</param>
            <param name="UseTiling">Specifies that the PDF should be rendered as several segments and merged into the final image. This can help in cases where the output image is too large, causing corrupted images (e.g. missing text) or crashes.</param>
            <param name="DpiRelativeToBounds">Specifies that <see cref="P:VL.PDFReader.RenderOptions.Dpi"/> and <see cref="P:VL.PDFReader.RenderOptions.WithAspectRatio"/> will be calculated relative to <see cref="P:VL.PDFReader.RenderOptions.Bounds"/> instead of the original PDF.</param>
        </member>
        <member name="M:VL.PDFReader.RenderOptions.#ctor(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Boolean,VL.PDFReader.PdfRotation,VL.PDFReader.PdfAntiAliasing,System.Nullable{Stride.Core.Mathematics.Color4},System.Nullable{Stride.Core.Mathematics.RectangleF},System.Boolean,System.Boolean)">
            <summary>
            Contains all relevant information to render a PDF page into an image.
            </summary>
            <param name="Dpi">The DPI scaling to use for rasterization of the PDF.</param>
            <param name="Width">The width of the desired page. Use <see langword="null"/> if the original width should be used.</param>
            <param name="Height">The height of the desired page. Use <see langword="null"/> if the original height should be used.</param>
            <param name="WithAnnotations">Specifies whether annotations be rendered.</param>
            <param name="WithFormFill">Specifies whether form filling will be rendered.</param>
            <param name="WithAspectRatio">Specifies that <paramref name="Width"/> or <paramref name="Height"/> should be adjusted for aspect ratio (either one must be <see langword="null"/>).</param>
            <param name="Rotation">Specifies the rotation at 90 degree intervals.</param>
            <param name="AntiAliasing">Specifies which parts of the PDF should be anti-aliasing for rendering.</param>
            <param name="BackgroundColor">Specifies the background color. Defaults to <see cref="F:Stride.Core.Mathematics.Color4.White"/>.</param>
            <param name="Bounds">Specifies the bounds for the page relative to PageSizes. This can be used for clipping (bounds inside of page) or additional margins (bounds outside of page) The bound units are relative to the PDF size (at 72 DPI).</param>
            <param name="UseTiling">Specifies that the PDF should be rendered as several segments and merged into the final image. This can help in cases where the output image is too large, causing corrupted images (e.g. missing text) or crashes.</param>
            <param name="DpiRelativeToBounds">Specifies that <see cref="P:VL.PDFReader.RenderOptions.Dpi"/> and <see cref="P:VL.PDFReader.RenderOptions.WithAspectRatio"/> will be calculated relative to <see cref="P:VL.PDFReader.RenderOptions.Bounds"/> instead of the original PDF.</param>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.Dpi">
            <summary>The DPI scaling to use for rasterization of the PDF.</summary>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.Width">
            <summary>The width of the desired page. Use <see langword="null"/> if the original width should be used.</summary>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.Height">
            <summary>The height of the desired page. Use <see langword="null"/> if the original height should be used.</summary>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.WithAnnotations">
            <summary>Specifies whether annotations be rendered.</summary>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.WithFormFill">
            <summary>Specifies whether form filling will be rendered.</summary>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.WithAspectRatio">
            <summary>Specifies that <paramref name="Width"/> or <paramref name="Height"/> should be adjusted for aspect ratio (either one must be <see langword="null"/>).</summary>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.Rotation">
            <summary>Specifies the rotation at 90 degree intervals.</summary>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.AntiAliasing">
            <summary>Specifies which parts of the PDF should be anti-aliasing for rendering.</summary>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.BackgroundColor">
            <summary>Specifies the background color. Defaults to <see cref="F:Stride.Core.Mathematics.Color4.White"/>.</summary>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.Bounds">
            <summary>Specifies the bounds for the page relative to PageSizes. This can be used for clipping (bounds inside of page) or additional margins (bounds outside of page) The bound units are relative to the PDF size (at 72 DPI).</summary>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.UseTiling">
            <summary>Specifies that the PDF should be rendered as several segments and merged into the final image. This can help in cases where the output image is too large, causing corrupted images (e.g. missing text) or crashes.</summary>
        </member>
        <member name="P:VL.PDFReader.RenderOptions.DpiRelativeToBounds">
            <summary>Specifies that <see cref="P:VL.PDFReader.RenderOptions.Dpi"/> and <see cref="P:VL.PDFReader.RenderOptions.WithAspectRatio"/> will be calculated relative to <see cref="P:VL.PDFReader.RenderOptions.Bounds"/> instead of the original PDF.</summary>
        </member>
        <member name="M:VL.PDFReader.RenderOptions.#ctor">
            <summary>
            Constructs <see cref="T:VL.PDFReader.RenderOptions"/> with default values.
            </summary>
        </member>
    </members>
</doc>
